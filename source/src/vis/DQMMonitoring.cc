  /// \file DQMMonitoring.cc
/*
 *
 * DQMMonitoring.cc source template automatically generated by a class generator
 * Creation date : sam. oct. 10 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */

// -- dqm4hep headers
#include "dqm4hep/vis/DQMMonitoring.h"
#include "dqm4hep/vis/DQMMonitoringController.h"
#include "dqm4hep/vis/DQMMonitoringModel.h"
#include "dqm4hep/vis/DQMMonitoringView.h"

namespace dqm4hep
{

DQMMonitoring::DQMMonitoring() :
	m_pController(NULL),
	m_pModel(NULL),
	m_pView(NULL)
{
	/* nop */
}

//-------------------------------------------------------------------------------------------------

DQMMonitoring::~DQMMonitoring()
{
	if(m_pController)
		delete m_pController;

	if(m_pModel)
		delete m_pModel;

	if(m_pView)
		delete m_pView;
}

//-------------------------------------------------------------------------------------------------

void DQMMonitoring::setController(DQMMonitoringController *pController)
{
	if(m_pController == pController)
		return;

	if(NULL != m_pController)
		delete m_pController;

	m_pController = pController;
}

//-------------------------------------------------------------------------------------------------

DQMMonitoringController *DQMMonitoring::getController() const
{
	return m_pController;
}

//-------------------------------------------------------------------------------------------------

void DQMMonitoring::setModel(DQMMonitoringModel *pModel)
{
	if(m_pModel == pModel)
		return;

	if(NULL != m_pModel)
		delete m_pModel;

	m_pModel = pModel;
}

//-------------------------------------------------------------------------------------------------

DQMMonitoringModel *DQMMonitoring::getModel() const
{
	return m_pModel;
}

//-------------------------------------------------------------------------------------------------

void DQMMonitoring::setView(DQMMonitoringView *pView)
{
	if(m_pView == pView)
		return;

	if(NULL != m_pView)
		delete m_pView;

	m_pView = pView;
}

//-------------------------------------------------------------------------------------------------

DQMMonitoringView *DQMMonitoring::getView() const
{
	return m_pView;
}

} 

