  /// \file DQMGuiTools.cc
/*
 *
 * DQMGuiTools.cc source template automatically generated by a class generator
 * Creation date : jeu. avr. 21 2016
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "dqm4hep/vis/DQMGuiTools.h"
#include "dqm4hep/DQMLogging.h"

#include <QInputDialog>
#include <QApplication>

#include <cstdlib>

namespace dqm4hep
{

QString DQMGuiTools::getDimDnsNode(QWidget *parent)
{
	bool ok = false;
	QString dimDnsNode;

	while( ! ok )
	{
		QInputDialog dialog(parent);

		dialog.setInputMode(QInputDialog::TextInput);
		dialog.setLabelText("DIM_DNS_NODE : ");
		dialog.setWindowTitle("DIM_DNS_NODE not set !");
		dialog.setTextValue("localhost");

		QSize size(dialog.size());
		size.setWidth(300);
		dialog.resize(size);

		qApp->processEvents();

		ok = static_cast<bool>(dialog.exec());

		dimDnsNode = dialog.textValue();

		if( dimDnsNode.isEmpty() )
			ok = false;
	}

	return dimDnsNode;
}

//-------------------------------------------------------------------------------------------------

void DQMGuiTools::checkDimDnsNode(QWidget *parent)
{
	char *pDimDnsNode = getenv("DIM_DNS_NODE");
	QString dimDnsNode;

	if( ! pDimDnsNode )
	{
		dimDnsNode = DQMGuiTools::getDimDnsNode(parent);
		setenv( "DIM_DNS_NODE" , dimDnsNode.toStdString().c_str(), 1 );
	}
	else
		dimDnsNode = pDimDnsNode;

	LOG4CXX_INFO( dqmMainLogger, "DIM_DNS_NODE set to '" << dimDnsNode.toStdString() << "'" );
}

} 

